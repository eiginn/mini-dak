#!/bin/bash
#
# Copyright Â© 2003, 2004, 2005 Guillem Jover <guillem@debian.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

#
# Requires: apt-utils
#

# Import library

. archive-lib

archive_link ()
{
  local changes_file=$1
  local dest_dir=$2
  local files=`changes_strip < $changes_file | fetch_files`

  echo " -> linking to $dest_dir"
  echo "  -> $files"

  ln $changes_file "$dest_dir" 2>/dev/null

  if ln $files "$dest_dir"; then
    return 0
  else
    return 1
  fi
}

# message output

script_error ()
{
  # FIXME: message should be nicer than that
  log install "$1" | echo mail -s "Error in `basename $0`" $archive_maint
}

#
# Main
#

move_arch=$1

# Force multi-pool setting
multipool=yes

if [ -z "$move_arch" ]; then
  echo "error: no arch specified"
  exit 1
fi

echo_time "-> Merging .changes files list..."
cat $cache_dir/changes_*.list | sort > $cache_dir/changes.list

cd $archive_dir

shopt -s nullglob

echo_time "-> Hard linking to the new multi pool..."
cat $cache_dir/changes.list | while read package suite arch version path; do
  changes_file="$path"
  changes_dir=`dirname $path`
  dest_dir=`poolize_arch_name $package $arch`

  if ! [ "$move_arch" = "$arch" ]; then
    continue
  fi

  echo "-> $package : $arch"

  if [ ! -d "$dest_dir" ]; then
    mkdir -p $dest_dir
  fi

  cd $changes_dir

  if archive_link $changes_file $dest_dir; then
    log install "link_success ${changes_file##*/}"
  else
    script_error "$?"
    log install "link_failed ${changes_file##*/}"
  fi

  cd - >/dev/null
done

cd - >/dev/null
